Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages 92% of US-based developers already using AI-powered coding tools at work: GitHub report Share on Facebook Share on X Share on LinkedIn Are you ready to bring more awareness to your brand? Consider becoming a sponsor for The AI Impact Tour. Learn more about the opportunities here.
A recent survey conducted by GitHub in partnership with Wakefield Research sheds light on the impact of artificial intelligence (AI) on the developer experience. The survey, which involved 500 U.S.-based developers from companies with 1,000-plus employees, focused on key aspects of their careers, such as developer productivity, team collaboration and the role of AI in enterprise environments.
According to the findings, 92% of developers already use AI-powered coding tools in their work. Yet despite investments in DevOps, developers still face challenges. They report their most time-consuming task as waiting on builds and tests. They also expressed concerns about repetitive tasks such as writing boilerplate code. They aspire to allocate more time to collaborate with peers, acquire new skills and create innovative solutions.
GitHub stated that these statistics indicate a growing need for improving efficiency in the development process.
>>Don’t miss our special issue: Building the foundation for customer data quality.
<< VB Event The AI Impact Tour Connect with the enterprise AI community at VentureBeat’s AI Impact Tour coming to a city near you! “We found that developers spend most of their time writing code and tests, then waiting for the code to be reviewed or for the builds to finish,” Inbal Shani, chief product officer at GitHub, told VentureBeat. “We also found that AI-powered coding tools enable individual developer productivity and greater team collaboration. That means generative AI helps developers generate greater impact, increase satisfaction and build more innovative solutions.” The company suggests that business leaders should prioritize their developers by identifying areas of friction, eliminating productivity barriers and fostering growth and momentum. Developer experience, the study found, is a major influence on productivity, satisfaction and impact.
Collaboration emerged as a vital aspect of the developer experience. Developers in enterprise settings typically collaborate with an average of 21 engineers on projects, making their collaborative skills important in their performance evaluations. Over 80% of developers believe that AI-powered coding tools can enhance team collaboration, improve code quality, speed project completion and improve incident resolution.
“Collaboration is the force multiplier for larger engineering teams to benefit and drive customer results. Every organization should use this equation to place developers at the center of empowering customers,” added GitHub’s Shani.
In the study, developers also expressed a desire for more opportunities to upskill and drive impact. They ranked learning new skills, receiving feedback from end users and designing solutions to novel problems as key elements that positively impact their workday.
What developers need in today’s growing AI ecosystem The survey delved into the impact of AI-powered coding tools on individual performance. An overwhelming majority of developers (92%) reported using AI-powered coding tools, with 70% believing these tools provide them an advantage at work.
Developers said they view AI as an opportunity to concentrate on solution design and skill development, such as learning new programming languages and frameworks. They also asserted that integrating AI coding tools aligns with the goal of enhancing the developer experience.
In fact, Github’s Shani anticipates the 92% figure to have already increased since the study was conducted in March 2023. “We’ve already seen this impact from our customers using GitHub Copilot,” Shani said. “These developers feel 75% more fulfilled with their work and are already writing code more than 55% faster.” Shani stated that AI has the potential to significantly enhance various aspects of the developer experience. These includes expediting code delivery, facilitating intelligent code reviews, enhancing collaboration within the codebase, and overcoming disruptions in the development process that typically demand more cognitive effort.
According to her, as AI models advance and additional functionalities are developed, we can anticipate a fundamental redefinition and improvement of the developer experience, developer productivity and team collaboration.
Upskilling, productivity the top benefits of AI tools The study identified upskilling as the top benefit, followed by productivity gains. Integrating AI-powered coding tools into the developer’s workflow was seen as an opportunity to improve performance and better meet existing standards.
Developers said that acquiring new skills and creating innovative solutions had the greatest positive impact on their work.
“AI developer tools will soon become table stakes, and organizations that don’t adopt this change will be left behind. Having AI tools will become an expectation from all developers as a central tool to do their job,” added Shani. “If industries want to hire and retain top talent, they need to be able to provide the best tools to make developers more productive.” The survey also highlighted the misalignment between current performance metrics and developer expectations. Code quality and collaboration were identified as the most important performance metrics, with developers expecting to be evaluated based on those criteria. Yet, according to Shani, leaders have traditionally assessed performance based on code quantity and output. Developers argue code quality and collaboration at least as important factors to evalute.
“I know this from my own experience of being a developer! We developers prefer to be measured on how we’ve resolved complex incidents and delivered impact, rather than on the number of incidents resolved—which developers in our survey echoed,” she said.
Effective collaboration is said to improve code quality. Developers pointed to a number of factors as critical to successful collaboration; regular touchpoints, uninterrupted work time, access to fully configured developer environments, and mentor-mentee relationships.
They noted ineffective meetings and excessive communication as distractions that have negatively impacted their work.
“Given that developers now work with an average of 21 other engineers on projects, collaboration is more important than ever to efficiency and productivity. Developers in our survey said they want their organizations to make collaboration a top performance metric, which suggests organizations can do a better job of incentivizing greater collaboration among their engineering teams,” explained Shani. “Organizations should proactively incentivize developer collaboration as the true force multiplier on mission-critical results.” The importance of establishing governance standards for AI tools Shani believes that the widespread adoption of AI-powered coding tools among developers indicates that most organizations likely have developers using these tools without an enterprise-grade solution or clear policies in place to govern their use effectively.
She said that while generative AI tools like ChatGPT and Stable Diffusion have gained popularity, they continue to undergo rapid development, with concerns remaining about the occurrence of false outputs or hallucinations , as well as data privacy.
Therefore, Shani stressed the importance of organizations investing in enterprise-grade AI coding tools that align with their efficacy and data privacy criteria. Furthermore, she emphasized the need to assist developers in integrating and optimizing their workflows around these approved tools.
“In our experience with customers deploying GitHub Copilot and GitHub Enterprise, such technology investments require organization-wide cultural change and proactive change management,” she explained. “You can’t turn on new AI coding tools and expect teams to seamlessly adapt their workflows around them. Technical agility requires operational agility.” How organizations can improve the developer experience Shani advises organizations to start at the cultural level to identify workplace programs and policies that promote increased collaboration. She emphasizes the significance of establishing regular check-ins for working teams, scheduling meetings, and providing platforms for asynchronous communication through pull requests, issues and chat apps.
Engineering leaders should also explore methods to standardize developer environments, such as using cloud-based IDEs or alternative solutions, according to Github. These initiatives aim to minimize the time spent on machine setup and allow developers to focus more on collaborative problem-solving.
The study reveals that developers highly value mentor-mentee relationships and want more such relationships in their work environment. GitHub suggests that organizations can seize this opportunity to invest in cost-effective measures that facilitate the growth and upskilling of their development teams.
“Programs and processes that incentivize effective collaboration and communication, whether through documentation, effective meetings, or team components like mentor-mentee relationships, can help developers work together, enter a flow state and even grow their skills,” said Shani. “Through AI-powered coding tools, teams can start with simple things like code reviews or pair programming to stand up effective mentors across their organizations to help their more junior developers grow.” VentureBeat's mission is to be a digital town square for technical decision-makers to gain knowledge about transformative enterprise technology and transact.
Discover our Briefings.
The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! VentureBeat Homepage Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
