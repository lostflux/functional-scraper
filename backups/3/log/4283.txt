Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages Guest It’s the network, not the ‘things,’ that will make IoT revolutionary Share on Facebook Share on X Share on LinkedIn Are you looking to showcase your brand in front of the brightest minds of the gaming industry? Consider getting a custom GamesBeat sponsorship.
Learn more.
Gartner estimates that the number of connected objects will reach 25 billion by 2020. And that figure came long before this month’s announcements of Samsung’s Artik chip-and-software building blocks for IoT, Hauwei’s LiteOS for the Internet of Things (IoT) and, yesterday, Brillo , Google’s new IoT operating system. These latest announcements are testament to the rising demand to connect everyday objects.
But the number of connected objects in the world isn’t the right way to gauge whether the “Internet of Things revolution” is here or not. We’re paying too much attention to the things part of IoT, when really, the true potential comes from the network that brings them together.
Connectivity is neat, but narrow Before I get into that, let’s look at where we are now. The defining feature that makes a “thing” part of the Internet of Things is connectivity. Already, that has meant the ability to control a device remotely with a smartphone or other computer. Such control opens up amazing new features, like unlocking your front door from work to let your neighbor borrow your skillet, or keeping an eye on your cat through a WiFi enabled webcam.
In March, we saw how connected devices made an enormous difference for a Minnesota woman who frequently travels out of state. Using two smart motion sensors and a camera phone, she could keep an eye on her home anywhere her smartphone could get a signal. When a burglar broke into her home, she was notified so fast that the police were called soon enough to catch the perpetrator hiding in his van in the driveway. That she was 700 miles away made no difference.
With stories like this, nobody can contest the progress these connected devices represent. But even so, such devices have limitations. For starters, the setup in the above example depended on the user being connected to the Internet — a morning subway commute would have meant payday for the robber. Furthermore, while the SmartSense motion sensor she used is built to work with a number of other devices, there’s no way the non-technical user could get it to do anything not listed on the box it came in. What if she wanted the device to automatically call her neighbors when it detected motion? No such luck.
This is why the real revolution has yet to come. Though more aware than their predecessors, “smart” devices really only know a minimum of information required to carry out their factory-specified functions. Yes, the adoption of Brillo and its competitors is sure to increase inter-operability. But even so, expecting manufacturers to take into account the unique needs and preferences of every customer is akin to asking Facebook to design every user’s profile page.
The solution is simple: Put programming device functionality into the user’s hands, and don’t rely on any one operating system to do it.
No developer knows us better than ourselves I’m not suggesting every user learns to code and tinkers with each operating system’s unique API. Rather, we need another “logic layer” to bridge each device’s OS with the end user. And just as controlling the computation-heavy functionality of a smart thermostat is as simple as turning a dial, giving the layer a user-friendly interface could allow them to program complex logical responses with no more difficulty than setting up a Twitter account.
An interface like this would add exponential possibilities for even non-technical users to customize their homes. For instance, you could program your smart lock to not just notify your phone after three failed entry attempts, but to switch on a webcam in your living room as well. And if, afterward, a motion detector is tripped, you could program it to text your neighbors and start blinking every light in the house to draw attention from the outside.
Bigger than your living room By virtue of being an online device, regardless of where we stick that layer (a cell phone, a tablet, etc.), it could interact with the Internet outside the IoT. This is where the potential takes off.
For example: It could find out when the 49ers win a game by having my network scan tweets and RSS feeds. Then it could do all sorts of things: flash the team’s colors on my LED lights, taunt a Seahawks fan I know with a text message, and even send a celebratory Budweiser to my house with the Minibar app. Such functionality goes beyond what a hardware hub can offer. It’s a new Programmable Web.
Of course, consumers aren’t the only ones who stand to benefit from this revolution. Companies have been using automated data tracking for years to monitor things like inventory, output, and malfunctions to keep things running as smoothly as possible. But integrated systems of that magnitude often take teams of experts to implement and maintain. A user-friendly, programmable logic layer that takes every common form of input and output would immensely reduce the cost of such a system.
The true potential of “smart” We’ve seen time and time again how computers make enormous leaps forward in every industry they touch — but never without the growing pains of competing standards. And just as the Browser Wars rage on nearly two decades after the birth of the World Wide Web, there’s no chance of a single dominant IoT operating system emerging when the place at the top is so lucrative.
Yet all we need is an outside programming standard to trivialize these differences, as HTML does for different browsers. Add an interface that anyone can use, and that’s when the revolution will arrive. It’ll be when a device’s functionality is limited by user imagination, not manufacturer spending. It’ll be when our network of smart devices is a whole lot greater than the sum of its parts. And get ready, because the new Programmable Web is coming faster than you think.
Freddy Mini is CEO of Netvibes (now part of Dassault Systèmes), which provides dashboard technology to businesses and consumers.
VentureBeat's mission is to be a digital town square for technical decision-makers to gain knowledge about transformative enterprise technology and transact.
Discover our Briefings.
The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! VentureBeat Homepage Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
