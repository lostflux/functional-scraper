Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages Neo4j brings vectors to graph database Share on Facebook Share on X Share on LinkedIn Are you ready to bring more awareness to your brand? Consider becoming a sponsor for The AI Impact Tour. Learn more about the opportunities here.
Graph database vendor Neo4j announced today new capabilities for vector search within its graph database.
Neo4j’s namesake database technology enables organizations to create a knowledge graph of information to better understand relationships across data and content.
A graph database is different from a traditional relational database in how it is structured. Instead of using rows and tables to organize data, a graph database has nodes and edges to build out a knowledge graph of information. The addition of vectors to Neo4j now brings another way to further bring in more context to the graph database for enhanced search as well as helping to enable generative AI and large language models (LLMs).
“We have spent a huge amount of time and energy figuring out where graph [databases] fit to the broader general AI landscape, and the vector support is one important component of that story,” Emil Eifrem, cofounder and CEO of Neo4j, told VentureBeat.
VB Event The AI Impact Tour Connect with the enterprise AI community at VentureBeat’s AI Impact Tour coming to a city near you! The intersection of graph and vector databases With the rise of gen AI, there has been a corresponding growth in the need and demand for vector-capable databases.
With a vector, content is converted into a numerical value, with techniques such as Approximate Nearest Neighbor (ANN) used to enable similarity search. There are a number of purpose-built vector databases such as Pinecone and Milvus in addition to existing database platforms that are being extended to support vectors including PostgreSQL , MongoDB and Redis.
Eifrem explained that Neo4j is adding vector support as a new property type for a graph node. The vector embedding will now be an additional property of a node that could already have other attributes, such as a customer or product name. In addition to the new vector property type, there is also a new index type that enables support for vector-similarity search.
With the existing capabilities of Neoj4, Eifrem said that the graph database captures explicit relationships between concepts. What vectors do is draw out implicit relationships in data.
“Graph databases are great at capturing explicit relationships, and vectors are good at inferring implicit relationships,” said Eifrem. “When we thought about it from that perspective, it became very obvious that adding support for vector data makes a lot of sense. Our mission is to help the world make sense of data through relationships.” How graph databases can make vectors more useful The fundamental building block of the Neo4j database is the knowledge graph.
Eifrem explained that with a traditional relational database, an organization keeps all of its data in rows and tables. For example, those rows and tables could be a list of all products and prices, or listings of customers and suppliers.
Eifrem said that a knowledge graph takes data and expresses it as relationships in graph form. With the graph, it’s possible to more easily see that a particular customer is connected to a particular set of products, and those products sit in a particular product hierarchy. The graph can also show how certain suppliers connect and deliver specific products via a supply chain. The basic idea is to enable an enterprise to express and identify its knowledge in a graph-connected approach.
Combining the relationships that a graph database provides with capabilities of a LLM can be advantageous, according to Eifrem. He noted that LLMs, while powerful, are fundamentally probabilistic and take a “best guess” at generating the right answer. Eifrem said that deploying an LLM with a graph database provides an opportunity for increased accuracy and can potentially help to reduce hallucination as well.
“Being able to combine the probabilistic guesses of an LLM with the actual explicit stacks of a knowledge graph is a really powerful combination,” Eifrem said.
VentureBeat's mission is to be a digital town square for technical decision-makers to gain knowledge about transformative enterprise technology and transact.
Discover our Briefings.
The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! VentureBeat Homepage Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
