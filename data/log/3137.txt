Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages Guest How generative AI code assistants could revolutionize developer experience Share on Facebook Share on X Share on LinkedIn Are you ready to bring more awareness to your brand? Consider becoming a sponsor for The AI Impact Tour. Learn more about the opportunities here.
Developers are experiencing an evolution in how they complete work. With the advent of generative AI , a race in AI-augmented programming has begun. Several technology providers are introducing new and improved tools that provide an immersive AI coding experience and help developers scale productivity.
Gen AI code generation has the potential to revolutionize software development workflow and the developer experience. Generative assistants can augment the work of developers by helping with tasks such as generating boilerplate code, refactoring legacy code, writing test cases, checking for vulnerabilities and much more. Gartner predicts that by 2025, 80% of the product development life cycle will make use of gen AI code generation, with developers acting as validators and orchestrators of back-end and front-end components and integrations.
For enterprises, a superior developer experience is essential to attract and retain top engineering talent. It also ensures development teams are productive and engaged with their work, helping accelerate innovation. In a recent Gartner survey , 58% of software engineering leaders reported that developer experience is “very” or “extremely” critical to the C-suite at their organizations.
Technology vendors will lead the charge in both experimenting with AI code assistants for building software faster, as well as integrating them as part of the experience they want to deliver for their customers — coders and citizen developers. Therefore, business leaders at these organizations must understand the potential of AI coding assistants and plan for how these solutions will impact outcomes across the organization.
VB Event The AI Impact Tour Connect with the enterprise AI community at VentureBeat’s AI Impact Tour coming to a city near you! Developers will become orchestrators of software development AI code assistants will provide two important benefits for tech companies, the first being productivity.
Software engineering teams will be able to scale their productivity, and therefore their ability to iterate and improve features at a faster pace. In the near future, developers will increasingly act as orchestrators of coding tasks, with code assistants completing a large majority of the work.
The second benefit will be a faster response to competitive pressure. AI code assistants will considerably lower the barriers to entry in software development, which means new entrants in the competitive space will add to the pressure on innovation pace and margin of existing players. Development teams that do not adopt code assistants within their software life cycle will be left behind in terms of their ability to execute and to deliver against the fast-moving competitive landscape.
AI code assistants will augment developer personas Many technology vendor organizations must also consider the impact of gen AI code assistants on their product offerings. For enterprises delivering software targeted to developers, product teams must capitalize on changing expectations around developer experience.
Augmented integrated development environments (IDEs) with code assistants will replace basic code editors, becoming table stakes in the short term. Targeted developer personas will expect a superior experience in the applications and platforms they use.
If the platform offers neither native nor integration options with vetted AI code assistant services, developers will either choose competitors that offer that option, or they will take their development efforts outside of the designated platforms offered. Business leaders at enterprises looking to provide a competitive experience for software targeting developers must work with product teams to integrate augmented IDE services into their offerings.
Generative low-code and no-code applications will accelerate citizen technologist personas Finally, business leaders must also consider how gen AI code assistants can impact development activities outside of IT. Gartner predicts that by 2025, 80% of custom technology solutions within enterprises will be created by those who are not full-time technical professionals, up from 20% in 2020. Advancing into generative processes and workflows will be a natural progression from task-based code generation.
Process metadata will be the baseline for training and guiding generative processes that orchestrate blocks of generative code tasks. This application of gen AI will fuel the productivity wave for low-code and no-code citizen developers. They will be able to use text-to-process generative assistants that produce processes and workflows with multiple code tasks.
This will enable citizen developers to prompt generative assistants to design and build full applications that combine both front-end and back-end services. Examples of voice-to-text-to-process are already emerging for building basic functional web applications and will continue to progress in more complex tasks.
Employing gen AI coding assistants to support the developer experience is just the beginning. The low-code and no-code builder experience will scale the value of gen AI coding assistants, enabling organizations to drive productivity and outcomes beyond the development team. Business leaders should support citizen technologists within their organizations in employing gen coding solutions to build applications and speed up processes.
How to begin integrating AI code assistants in the enterprise To attract and retain critical software engineering talent, stay ahead of competition and drive digital transformation through citizen technologists, enterprises must embrace AI code assistant offerings within all aspects of the software development workflow. This will require business leaders to be engaged in making the right vendor and talent management decisions, as well as taking the proper risk mitigation measures.
From a vendor management perspective, gen AI coding assistants are evolving rapidly, with commercial offerings currently more mature than open source versions. Vendor offerings use a range of different models, meaning that developers may prefer different products. When evaluating code assistant offerings, focus on vendors who make the exploratory experience for developers easy and accessible. Look for vendors that provide enterprise-grade services with a focus on security and privacy as well as continuous learning and feedback loop of the code bases into the generative models powering the tools.
Business leaders can begin by working with IT and software engineering leadership to pilot solutions with an eye toward fast rollouts to maximize developer productivity. Make it easy for willing developers to use approved products and encourage the sharing of best practices across engineering teams. Best practices should span not only appropriate tools for certain tasks, for prompt engineering, with documented examples for improving the outcomes from code generation.
Risks associated with gen AI tools While the responsibility for mitigating the risk of using AI code assistants is shared by the vendor and the buyer enterprises, organizations using gen AI tools for software development should actively gain awareness of risks associated with these tools. Stay vigilant across the evaluation, activation and full operationalization of AI code assistants. Potential risks to watch for include intellectual property risks, software bugs and security vulnerabilities, impacts on code quality and the overall pace of change in the vendor space, among others.
AI coding assistants will enhance developer productivity, but they will not replace developers in the near to medium term. However, the prospects for the long term are yet to be determined. Technology leaders must act now to evolve their development teams to embrace the power of these offerings while planning for the long-term evolution of the software engineering experience.
Radu Miclaus is a senior director analyst at Gartner, Inc.
DataDecisionMakers Welcome to the VentureBeat community! DataDecisionMakers is where experts, including the technical people doing data work, can share data-related insights and innovation.
If you want to read about cutting-edge ideas and up-to-date information, best practices, and the future of data and data tech, join us at DataDecisionMakers.
You might even consider contributing an article of your own! Read More From DataDecisionMakers The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! DataDecisionMakers Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
