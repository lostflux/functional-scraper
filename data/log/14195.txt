Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages Guest No-code/low-code: Why you should be paying attention Share on Facebook Share on X Share on LinkedIn Are you ready to bring more awareness to your brand? Consider becoming a sponsor for The AI Impact Tour. Learn more about the opportunities here.
We’ve all been hearing the hype lately about low-code and no-code platforms. The promise of no-code platforms is that they’ll make software development just as easy as using Word or PowerPoint so that the average business user can move projects forward without the extra cost (in money and time) of an engineering team. Unlike no-code platforms, low-code platforms still require coding skills but promise to accelerate software development by letting developers work with pre-written code components.
According to Gartner , 65% of application development will be low code by 2024.
I was involved in an early comparative productivity benchmark test between traditional development (using Java) and a model-driven low-code/no-code development project back in 2017. The results were impressive: 5X to 7X productivity improvement with low-code/no-code development. A survey by No-Code Census in 2020 showed a 4.6X productivity gain over traditional programming.
Low-code/no-code: A fragmented market The low-code/no-code landscape is complex, with numerous solutions, platforms, and submarkets. For example, there are submarkets targeting large enterprises, medium-sized businesses, and small businesses. Enterprise low-code/no-code platforms provide high scalability, performance, security, and integration with enterprise applications. They tend to be more expensive. Here’s Gartner’s Magic Quadrant for enterprise low-code platforms: VB Event The AI Impact Tour Connect with the enterprise AI community at VentureBeat’s AI Impact Tour coming to a city near you! Gartner defines a low-code application platform (LCAP) as “an application platform that supports rapid application development, one-step deployment, execution and management using declarative, high-level programming abstractions, such as model-driven and metadata-based programming languages.” G2 offers a similar landscape overview for small-sized businesses.
 There is not much of an intersection between the small-business and the enterprise low-code platforms. Some of the small-business platform vendors will not be known or recognized in enterprises. Similarly, small and midsized businesses usually do not tend to purchase the enterprise platforms – primarily due to their pricing and complexity.
Not surprisingly, many low-code platforms are business process management platforms.
BPM has long supported model-driven development (MDD) — where you first diagram how software should work before building it. This diagramming is similar to the BPM process-map approach, where, to specify a business process, you drag and drop shapes representing subprocesses into the correct order. (The most popular process mapping standard supported by most BPM platforms is BPMN.
) So process-centric low-code solutions are quite popular. Examples of BPM low-code/no-code platforms include Appian , Pega , and Outsystems.
 (Disclosure: I previously worked as VP of BPM technology at Pega.) But there are other paradigms under the low-code/no-code umbrella: Web site low-code/no-code platforms: Enterprises of all sizes can leverage these platforms. The leading contenders are WordPress , Wix , Squarespace , and WebFlow.
Database management low-code/no-code platforms: On the high end (enterprise), you have platforms such as Mendix.
 On the lower end, you have Airtable.
 There are also NoSQL database low-code/no-code platforms such as KgBase for knowledge graphs.
Automated integration low-code/no-code platforms: There are several exciting and emerging platforms in this domain: Zapier , Parabola , and Integromat are in this category. You can develop powerful and complex integration flows relatively quickly through these tools. Here is an example of a Parabola workflow that pulls from an API, does some data manipulations, and then sends it to another API. The automated workflow can be run on-demand, scheduled, or invoked via a webhook.
Mobile application development: Most low-code/no-code platforms, such as Bubble , provide responsive UI capabilities for mobile applications. Others offer native support for the leading mobile operations systems (iOS and Android).
Thunkable is perhaps the ultimate example for low-code/no-code mobile application development.
Many of these platforms provide rich collections of plug-ins and templates for certain types of applications.
Other categories of low-code/no-code platforms target specific application areas or niches: E-commerce and online stores: A leading example in this category is Shopify.
Work management: A good example in this category is Monday.com.
ERP applications: An interesting example here – also listed in Gartner’s MQ – is Zoho.
 Another significant and impactful platform for ERP and CRM is Salesforce.
Blockchain and IoT: Atra is an example in this category – for blockchain.
Artificial intelligence: A fascinating area for low-code/no-code is AI, and we are now starting to see the emergence of tools in this area. An example here is C3 AI Ex Machina.
Low-code/no-code challenges Low-code/no-code platforms have many benefits, but they also present some challenges and involve a learning curve. Many best practices are just emerging and are relatively immature. This is a critical liability. With traditional programming, there is an enormous body of experience, robust communities, and documented best practices. In many ways, low-code/no-code is at its infancy – even though MDD has been around for a long time: especially with BPM platforms.
Here are some of the more critical challenges for low-code/no-code: 1. It involves a culture change: Low-code/no-code requires a change in an organization’s culture , whether that organization be an enterprises or a startup. Changing the culture to obliterate silos is not easy. It requires executive vision and endorsement. It also requires the allocation of budget and empowerment to a low-code/no-code digital transformation competency center.
2. It takes time and effort to learn the platforms: Low-code/no-code increases speed and productivity. But it is not easy. The tools and platforms are not trivial, and developing a level of expertise takes time. This is one of the most misunderstood aspects of low-code/no-code. Complex programming constructs such as nested loops are not that easy on any platform.
3. You may need multiple platforms: Some platforms are more complete than others.
Unqork and Bubble , for example, are designed to be used across any use case and so offer many options for integration with enterprise systems. However, they can benefit greatly from other components that specialize in specific areas; for instance, Bubble together with, say, Parabola or the Zapier plugin for automated integration. The data manipulation and integration capabilities in Parabola or Zapier are easier to work with than the native ones in Bubble. There are other plugins or technology components that complement low code/no code platforms with additional technologies: Check out, for instance, the technology partnerships for Unqork or the comprehensive list of plugins for Bubble.
4. Resources and community support are scarce: Many low-code/no-code platforms are relatively immature. There are millions of developers – sometimes tens of millions – for conventional programming languages. Many online and on-site courses and books and materials are readily available for languages such as Java or C#. There are multiple communities and resources for outsourcing. It is an entirely different scenario for low-code/no-code – especially for the more recent platforms.
5. Pricing can be confusing: Enterprise low-code/no-code platforms tend to be unnecessarily expensive. The mid- and small-market platforms are less costly but are typically less scalable. The involvement of multiple platforms for an end-to-end solution complicates pricing issues more.
Those are just some of the key challenges. They make it clear that low-code/no-code is no panacea. However, it remains a formidable trend for developing innovative solutions both for incumbent enterprises and startups.
We should expect to hear about more challenges from this space as it continues to mature. And there will be failed projects. But the advantages – especially in accelerating speed of development and productivity – will win the day.
Are you ready? Dr. Setrag Khoshafian is a cofounder at Startup Assistant and Principal and Chief Scientist at Khosh Consulting.
 He was previously VP of BPM Technology at Pega, Senior VP of Technology at Savvion, and CTO at Portfolio Technologies and is a member of the Cognitive World Think Tank on enterprise AI.
VentureBeat regularly publishes guest posts from expert data and AI practioners.
VentureBeat's mission is to be a digital town square for technical decision-makers to gain knowledge about transformative enterprise technology and transact.
Discover our Briefings.
The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! VentureBeat Homepage Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
