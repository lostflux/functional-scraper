Artificial Intelligence View All AI, ML and Deep Learning Auto ML Data Labelling Synthetic Data Conversational AI NLP Text-to-Speech Security View All Data Security and Privacy Network Security and Privacy Software Security Computer Hardware Security Cloud and Data Storage Security Data Infrastructure View All Data Science Data Management Data Storage and Cloud Big Data and Analytics Data Networks Automation View All Industrial Automation Business Process Automation Development Automation Robotic Process Automation Test Automation Enterprise Analytics View All Business Intelligence Disaster Recovery Business Continuity Statistical Analysis Predictive Analysis More Data Decision Makers Virtual Communication Team Collaboration UCaaS Virtual Reality Collaboration Virtual Employee Experience Programming & Development Product Development Application Development Test Management Development Languages Guest Low code: A promising trend or a Pandora’s Box? Share on Facebook Share on X Share on LinkedIn Are you ready to bring more awareness to your brand? Consider becoming a sponsor for The AI Impact Tour. Learn more about the opportunities here.
The analyst community is having a field day with hype around “ low code.
” IDC has predicted that there will be more and more low code used and that the worldwide population of low-code developers will grow with a CAGR of 40.4% from 2021 to 2025.
Gartner predicted that low code will increase nearly 30% from 2020 to reach $5.8 billion in 2021.
Forrester has also jumped on the low-code hype wagon and forecasted that by the end of 2021, 75% of application development will use low-code platforms.
Low code requires little coding skill and uses visual, pre-packaged templates, point and click, and drag-and-drop software techniques. It’s a bit like using Lego blocks to build software applications to solve problems related to procedures or small processes. Requiring minimal IT support, such low code applications can be implemented rapidly and are cost effective too.
A few low code pros and cons The development of low code is likely to be welcome by many business users, especially those who are a bit tech savvy and have had to wait for months for their IT department to address minor change requests. The relatively low cost of deploying low code and the faster/easier application delivery will also be appreciated.
On the other hand, there are several issues with low code that will only become clear with time. For example, using low code to solve multiple current problems will likely result in integration problems down the road. Then, even though there is some level of security built into most low code apps, as various users in multiple departments use low code to solve minor problems, the likelihood of future security issues increases. Next, the widespread use of low code in an organization may lead to an even larger number of data silos as users develop minor changes such as new screens to meet their own departmental needs. Also, due to the increasing number of low-code vendors, the sheer number of platforms may eventually result in fragmentation that will need to be addressed at some point in the future. What is even more noteworthy is the relationship — or lack thereof — between low-code and hyperautomation.
VB Event The AI Impact Tour Connect with the enterprise AI community at VentureBeat’s AI Impact Tour coming to a city near you! Low code and hyperautomation Gartner introduced the term hyperautomation to describe the combination of different technologies to automate an organization’s processes in a unified, integrated way. Forrester calls this approach digital process automation (DPA), and IDC has used the label intelligent process automation (IPA) for the very same thing. In each case, analysts are referring to the integrated deployment of technologies such as robotic process automation (RPA), intelligent business process management (IBPM), machine learning, and artificial intelligence (AI) to streamline and orchestrate as many tasks, activities, and processes as possible.
Hyperautomation promotes collaboration across both departments and vendor platforms. The practice of having users independently use low code to develop minor changes is contrary to the core principles of hyperautomation. Instead of breaking down silos, low-code reinforces departmental silos and is likely to create even more data silos. The low-code movement has produced so called “citizen developers” — a new term for business users acting to satisfy their own information management needs with low code. It’s too early to tell whether citizen developers will act as “cowboys,” satisfying just their own selfish information needs potentially at the expense of others or whether they will consider the big picture. We’ll know in the next few years.
Low code and technical debt Technical debt is the extra development work that arises when an IT group chooses to use easy-to-implement code in the short run instead of applying the best (and sometimes more difficult) solution. Many organizations are mired in technical debt due to short-term thinking, changing requirements, and the simple fact that, for decades, IT groups have responded to the self-serving needs of individual departments as opposed to thinking systemically. Low code is likely to exacerbate the challenge of reducing technical debt for the following reasons : As multiple citizen developers implement small scale, low-code solutions, version control will likely become increasingly problematic.
When a low code solution is working fine — then all is good — but once problems arise — then testing and debugging can be challenging, as it’s difficult to see under the covers of pre-packaged templates.
As enterprise applications often need to connect with distributed systems, the integration of low-code solutions can be tricky.
What will the future hold? Let’s face it: Users need tools, too. Low code clearly offers short-term benefits. For quite some time, users have been turning to tools such as custom Excel spreadsheets to address the shortcomings of enterprise systems such as ERP and CRM. Low code offers a quick and easy-to-implement alternative at relatively low cost. Will low code satisfy the needs of knowledge workers outside of IT in implementing small-scale fixes, or will it open a Pandoras Box of integration issues? But the widespread use of low code may lead to a set of management challenges.
 How will IT management react when citizen developers create applications that don’t scale well and then turn these over to the IT group? What will be the backup plan when a citizen developer leaves the company and no one knows how to support the application they developed? Digital transformation is a complex undertaking with a dismal track record: As few as 30% of such initiatives succeed. Consider the Gartner Magic Quadrant below and note that the number of firms offering low-code solutions is steadily growing. What will the proliferation of low-code vendors mean to the development of an aligned and effective digital strategy? Will proprietary low-code systems lead to a significant risk of vendor lock-in? When departments do not collaborate, transformation efforts suffer. According to a 2020 report from Accenture, an amazing 75% of 1,500 global senior and C-level executives saw different business functions competing against each other instead of collaborating on digitization efforts. This lack of collaboration contributed to 64% of companies failing to see revenue growth from their digital investments, marking a clear connection between silo behavior and a lack of success with digital.
The bottom line is this: No one can see the big picture when individual departments just look at their own technology needs. In the absence of departmental collaboration, it’s hard to create the right context for focusing on customer experience and end-to-end process performance. Unless it is deployed with care, low code is not likely to promote a systemic view; instead, it is likely to reinforce short-term thinking.
Andrew Spanyi is President of Spanyi International.
 He is a member of the Board of Advisors at the Association of Business Process Professionals and has been an instructor at the BPM Institute.
 He is also a member of the Cognitive World Think Tank on enterprise AI.
DataDecisionMakers Welcome to the VentureBeat community! DataDecisionMakers is where experts, including the technical people doing data work, can share data-related insights and innovation.
If you want to read about cutting-edge ideas and up-to-date information, best practices, and the future of data and data tech, join us at DataDecisionMakers.
You might even consider contributing an article of your own! Read More From DataDecisionMakers The AI Impact Tour Join us for an evening full of networking and insights at VentureBeat's AI Impact Tour, coming to San Francisco, New York, and Los Angeles! DataDecisionMakers Follow us on Facebook Follow us on X Follow us on LinkedIn Follow us on RSS Press Releases Contact Us Advertise Share a News Tip Contribute to DataDecisionMakers Careers Privacy Policy Terms of Service Do Not Sell My Personal Information © 2023 VentureBeat.
 All rights reserved.
